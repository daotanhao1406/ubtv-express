{"version":3,"sources":["../../src/server.ts"],"sourcesContent":["import express, { Express, Request, Response, Application } from 'express'\r\nimport 'dotenv/config'\r\nimport { CLOSE_DB, CONNECT_DB } from '@/config/mongdodb'\r\nimport exitHook from 'async-exit-hook'\r\nimport { env } from '@/config/environment'\r\n\r\nconst START_SERVER = () => {\r\n\r\n  const app: Application = express()\r\n  const port = process.env.PORT || 8017\r\n\r\n  app.get('/', (req: Request, res: Response) => {\r\n    res.send('Welcome to Express & TypeScript Server')\r\n  })\r\n\r\n  app.listen(env.LOCAL_DEV_APP_PORT, () => {\r\n    console.log(`3. Server is Fire at http://localhost:${env.LOCAL_DEV_APP_PORT}`)\r\n  })\r\n\r\n  exitHook(() => {\r\n    console.log('4. Disconnecting from MongoDB...')\r\n    CLOSE_DB()\r\n    console.log('5. Disconnected from MongoDB')\r\n  })\r\n}\r\n\r\n// IIFE (Immediately Invoked Function Expression)\r\n(async () => {\r\n  try {\r\n    console.log('1. Connecting to MongoDB...')\r\n    await CONNECT_DB()\r\n    console.log('2. Connected to MongoDB')\r\n\r\n    START_SERVER()\r\n  } catch (error) {\r\n    console.error(error)\r\n    process.exit(0)\r\n  }\r\n})()"],"names":["START_SERVER","app","express","port","process","env","PORT","get","req","res","send","listen","LOCAL_DEV_APP_PORT","console","log","exitHook","CLOSE_DB","CONNECT_DB","error","exit"],"mappings":";;;;gEAAiE;QAC1D;0BAC8B;sEAChB;6BACD;;;;;;AAEpB,MAAMA,eAAe;IAEnB,MAAMC,MAAmBC,IAAAA,gBAAO;IAChC,MAAMC,OAAOC,QAAQC,GAAG,CAACC,IAAI,IAAI;IAEjCL,IAAIM,GAAG,CAAC,KAAK,CAACC,KAAcC;QAC1BA,IAAIC,IAAI,CAAC;IACX;IAEAT,IAAIU,MAAM,CAACN,gBAAG,CAACO,kBAAkB,EAAE;QACjCC,QAAQC,GAAG,CAAC,CAAC,sCAAsC,EAAET,gBAAG,CAACO,kBAAkB,EAAE;IAC/E;IAEAG,IAAAA,sBAAQ,EAAC;QACPF,QAAQC,GAAG,CAAC;QACZE,IAAAA,kBAAQ;QACRH,QAAQC,GAAG,CAAC;IACd;AACF;AAGC,CAAA;IACC,IAAI;QACFD,QAAQC,GAAG,CAAC;QACZ,MAAMG,IAAAA,oBAAU;QAChBJ,QAAQC,GAAG,CAAC;QAEZd;IACF,EAAE,OAAOkB,OAAO;QACdL,QAAQK,KAAK,CAACA;QACdd,QAAQe,IAAI,CAAC;IACf;AACF,CAAA"}